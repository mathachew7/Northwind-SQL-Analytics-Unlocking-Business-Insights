-- Let's Explore the dataset 


-- View table structures
DESCRIBE Categories;
DESCRIBE Products;
DESCRIBE Orders;
DESCRIBE OrderDetails;


-- Preview first 5 Data 
SELECT * FROM Categories LIMIT 5;
SELECT * FROM Products LIMIT 5;
SELECT * FROM Orders LIMIT 5;


-- Counting Records in each table 
SELECT 'Categories' AS TableName, COUNT(*) AS RecordCount FROM Categories
UNION ALL
SELECT 'Products', COUNT(*) FROM Products
UNION ALL
SELECT 'Orders', COUNT(*) FROM Orders
UNION ALL
SELECT 'OrderDetails', COUNT(*) FROM OrderDetails;


-- Letâ€™s dive deeper into analyzing the Northwind database. 

-- Top 5 Products generating the most revenue 
Select 
    p.ProductName, 
    SUM(od.Quantity * p.price) AS TotalRevenue
FROM OrderDetails od
JOIN Products p ON od.ProductID = p.ProductID
GROUP BY p.ProductID
ORDER BY TotalRevenue DESC
LIMIT 5;

-- Revenue Trend Over Time 
SELECT 
    DATE_FORMAT(o.OrderDate, '%Y-%m') AS Month,
    SUM(od.Quantity * p.Price) AS TotalRevenue
FROM Orders o
JOIN OrderDetails od ON o.OrderID = od.OrderID
JOIN Products p on od.ProductID = p.ProductID
GROUP BY MONTH
ORDER BY MONTH;


-- Top Categories by Revenue 
SELECT
    c.CategoryName, 
    SUM(od.Quantity * p.Price) AS TotalRevenue
FROM OrderDetails as od 
JOIN Products p ON od.ProductID = p.ProductID
JOIN Categories c ON p.CategoryID = c.CategoryID
GROUP BY c.CategoryID
ORDER BY TotalRevenue DESC;


-- Let's have some cusomter insights 

-- Top 5 Customers by Revenue 
SELECT 
    cu.CustomerName, 
    SUM(od.Quantity * p.Price) as TotalSpent
FROM Customers cu
JOIN Orders o ON cu.CustomerID = o.CustomerID
JOIN OrderDetails od ON o.OrderID = od.OrderID
JOIN Products p ON od.ProductID = p.ProductID
GROUP BY cu.CustomerID
ORDER BY TotalSpent DESC
LIMIT 5;

-- Customer Order Frequency 
SELECT 
    cu.CustomerName,
    COUNT(o.OrderID) AS OrderCount
FROM Customers cu
LEFT JOIN Orders o ON cu.CustomerID = o.CustomerID
GROUP BY cu.CustomerID
ORDER BY OrderCount DESC
LIMIT 5;

-- Average Order Value Per Customer
SELECT 
    cu.CustomerName,
    AVG(od.Quantity * p.Price) AS AvgOrderValue
FROM Customers cu
JOIN Orders o ON cu.CustomerID = o.CustomerID
JOIN OrderDetails od ON o.OrderID = od.OrderID
JOIN Products p ON od.ProductID = p.ProductID
GROUP BY cu.CustomerID
ORDER BY AvgOrderValue DESC
LIMIT 5;


-- Employee Performance 

-- Top Employees by Sales
SELECT 
    e.FirstName,
    e.LastName,
    SUM(od.Quantity * p.Price) AS TotalSales
FROM Employees e
JOIN Orders o ON e.EmployeeID = o.EmployeeID
JOIN OrderDetails od ON o.OrderID = od.OrderID
JOIN Products p ON od.ProductID = p.ProductID
GROUP BY e.EmployeeID
ORDER BY TotalSales DESC
LIMIT 5;

-- Average Order Size Handled by Employees
SELECT 
    e.FirstName,
    e.LastName,
    AVG(od.Quantity) AS AvgOrderSize
FROM Employees e
JOIN Orders o ON e.EmployeeID = o.EmployeeID
JOIN OrderDetails od ON o.OrderID = od.OrderID
GROUP BY e.EmployeeID
ORDER BY AvgOrderSize DESC;



-- Supplier Insights 

-- Top 10 Suppliers by Revenue 
SELECT 
    s.SupplierName,
    SUM(od.Quantity * p.Price) AS TotalRevenue
FROM Suppliers s
JOIN Products p ON s.SupplierID = p.SupplierID
JOIN OrderDetails od ON p.ProductID = od.ProductID
GROUP BY s.SupplierID
ORDER BY TotalRevenue DESC
LIMIT 10;


-- Products Supllied by Each Supplier 
SELECT 
    s.SupplierName,
    COUNT(p.ProductID) AS TotalProducts
FROM Suppliers s
JOIN Products p ON s.SupplierID = p.SupplierID
GROUP BY s.SupplierID
ORDER BY TotalProducts DESC;


-- Shipping Analysis 

-- Top Shippers by Number of Orders
SELECT 
    sh.ShipperName,
    COUNT(o.OrderID) AS TotalOrders
FROM Shippers sh
JOIN Orders o ON sh.ShipperID = o.ShipperID
GROUP BY sh.ShipperID
ORDER BY TotalOrders DESC;


-- Average Delivery Size by shipper
SELECT 
    sh.ShipperName,
    AVG(od.Quantity) AS AvgDeliverySize
FROM Shippers sh
JOIN Orders o ON sh.ShipperID = o.ShipperID
JOIN OrderDetails od ON o.OrderID = od.OrderID
GROUP BY sh.ShipperID
ORDER BY AvgDeliverySize DESC;


-- Advanced Analysis 

-- Order details by Region 
SELECT 
    cu.Country,
    SUM(od.Quantity * p.Price) AS TotalSales
FROM Customers cu
JOIN Orders o ON cu.CustomerID = o.CustomerID
JOIN OrderDetails od ON o.OrderID = od.OrderID
JOIN Products p ON od.ProductID = p.ProductID
GROUP BY cu.Country
ORDER BY TotalSales DESC;


-- Product demand Across Categories 
SELECT 
    c.CategoryName,
    SUM(od.Quantity) AS TotalQuantity
FROM OrderDetails od
JOIN Products p ON od.ProductID = p.ProductID
JOIN Categories c ON p.CategoryID = c.CategoryID
GROUP BY c.CategoryID
ORDER BY TotalQuantity DESC;


-- Advanced Insights and Analytical Queries 

-- Customer Lifetime Value
--- Calculate the total revenue generated by each customer and rank them by lifetime value.
SELECT 
    cu.CustomerName,
    SUM(od.Quantity * p.Price) AS LifetimeValue
FROM Customers cu
JOIN Orders o ON cu.CustomerID = o.CustomerID
JOIN OrderDetails od ON o.OrderID = od.OrderID
JOIN Products p ON od.ProductID = p.ProductID
GROUP BY cu.CustomerID
ORDER BY LifetimeValue DESC;


-- Revenue by Month and Year
--- Analyze monthly and yearly sales trends 
SELECT 
    YEAR(o.OrderDate) AS Year,
    MONTH(o.OrderDate) AS Month,
    SUM(od.Quantity * p.Price) AS MonthlyRevenue
FROM Orders o
JOIN OrderDetails od ON o.OrderID = od.OrderID
JOIN Products p ON od.ProductID = p.ProductID
GROUP BY YEAR(o.OrderDate), MONTH(o.OrderDate)
ORDER BY Year, Month;


-- Supplier Contribution to Revenue 
--- Find Suppliers that contribute the most to the company's Revenue 
SELECT 
    s.SupplierName,
    SUM(od.Quantity * p.Price) AS TotalRevenue
FROM Suppliers s
JOIN Products p ON s.SupplierID = p.SupplierID
JOIN OrderDetails od ON p.ProductID = od.ProductID
GROUP BY s.SupplierID
ORDER BY TotalRevenue DESC;



-- Product Performance Analysis 
--- Determine the best-performing products based on sales volume and revenue.
SELECT 
    p.ProductName,
    SUM(od.Quantity) AS TotalQuantitySold,
    SUM(od.Quantity * p.Price) AS TotalRevenue
FROM Products p
JOIN OrderDetails od ON p.ProductID = od.ProductID
GROUP BY p.ProductID
ORDER BY TotalRevenue DESC;


-- Order Fullfillment analysis 
--- Evaluate how frequently each shipper is used and their contribution to fulfilling orders.
SELECT 
    sh.ShipperName,
    COUNT(o.OrderID) AS TotalOrdersShipped,
    SUM(od.Quantity * p.Price) AS TotalValueShipped
FROM Shippers sh
JOIN Orders o ON sh.ShipperID = o.ShipperID
JOIN OrderDetails od ON o.OrderID = od.OrderID
JOIN Products p ON od.ProductID = p.ProductID
GROUP BY sh.ShipperID
ORDER BY TotalOrdersShipped DESC;


-- Employment Performance metrics 
--- Analyze the performance of employees by the number of orders handled and total sales generated
SELECT 
    e.FirstName,
    e.LastName,
    COUNT(o.OrderID) AS TotalOrdersHandled,
    SUM(od.Quantity * p.Price) AS TotalSalesGenerated
FROM Employees e
JOIN Orders o ON e.EmployeeID = o.EmployeeID
JOIN OrderDetails od ON o.OrderID = od.OrderID
JOIN Products p ON od.ProductID = p.ProductID
GROUP BY e.EmployeeID
ORDER BY TotalSalesGenerated DESC;



-- Regional Sales Insights 
--- Break down revenue by country or city to identify high-performing regions.
SELECT 
    cu.Country,
    SUM(od.Quantity * p.Price) AS TotalRevenue
FROM Customers cu
JOIN Orders o ON cu.CustomerID = o.CustomerID
JOIN OrderDetails od ON o.OrderID = od.OrderID
JOIN Products p ON od.ProductID = p.ProductID
GROUP BY cu.Country
ORDER BY TotalRevenue DESC;
